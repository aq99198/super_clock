C51 COMPILER V7.08   MAIN                                                                  11/23/2014 22:48:46 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2           * DS1302 突发方式，连读，连写
   3           *
   4          */
   5          
   6          #include "STC12C5A60S2.H"
   7          #include <intrins.h>
   8          
   9          
  10          
  11          typedef unsigned char uint8;
  12          typedef unsigned int uint16;
  13          
  14          #define SCK_BIT         4
  15          #define SDA_BIT         5
  16          #define RST_BIT         6
  17          
  18          
  19          sbit SCK = P4_IO(SCK_BIT);      //时钟  
  20          sbit SDA = P4_IO(SDA_BIT);      //数据  
  21          sbit RST = P4_IO(RST_BIT);  //DS1302复位(片选)
  22          
  23          
  24          #define BCD2HEX(n)      ((((n) & 0xf0) >> 4) * 10) + ((n) & 0xf)
  25          #define HEX2BCD(n)      (((n) / 10) << 4) + ((n) % 10)
  26          
  27          
  28          #define DS1302_W_ADDR 0xBE
  29          #define DS1302_R_ADDR 0xBF
  30          
  31          
  32          uint8 time[7]={50,59,23,15,8,7,10};//秒分时日月周年10-08-15 23:59:50
  33          
  34          
  35          void delay(uint16 n)
  36          {
  37   1              while (n--);
  38   1      }
  39          
  40          
  41          /**
  42           * 写一个字节
  43          */
  44          void write_ds1302_byte(uint8 dat) 
  45          {
  46   1              uint8 i;
  47   1              
  48   1              for (i=0;i<8;i++) 
  49   1              { 
  50   2                      SDA = dat & 0x01;
  51   2                      SCK = 1;
  52   2                      dat >>= 1;
  53   2                      SCK = 0;
  54   2              }
  55   1      }
C51 COMPILER V7.08   MAIN                                                                  11/23/2014 22:48:46 PAGE 2   

  56          
  57          /**
  58           * 读一个字节
  59          */
  60          uint8 read_ds1302_byte(void) 
  61          {
  62   1              uint8 i, dat=0;
  63   1              
  64   1              for (i=0;i<8;i++)
  65   1              {       
  66   2                      dat >>= 1;
  67   2                      if (SDA)
  68   2                              dat |= 0x80;
  69   2                      SCK = 1;
  70   2                      SCK = 0;
  71   2              } 
  72   1      
  73   1              return dat;
  74   1      }
  75          
  76          void reset_ds1302(void)
  77          {
  78   1              RST = 0;
  79   1              SCK = 0;
  80   1              RST = 1;
  81   1      }
  82          
  83          /**
  84           * 清除写保护
  85          */
  86          void clear_ds1302_WP(void) 
  87          {
  88   1              reset_ds1302();
  89   1              RST = 1;
  90   1              write_ds1302_byte(0x8E);
  91   1              write_ds1302_byte(0);
  92   1              SDA = 0;
  93   1              RST = 0;
  94   1      }
  95          
  96          /**
  97           * 设置写保护
  98          */
  99          void set_ds1302_WP(void) 
 100          {
 101   1              reset_ds1302();
 102   1              RST = 1;
 103   1              write_ds1302_byte(0x8E);
 104   1              write_ds1302_byte(0x80);
 105   1              SDA = 0;
 106   1              RST = 0;
 107   1      }
 108          
 109          
 110          /**
 111           * 设定时钟数据
 112          */
 113          void set_time(uint8 *timedata)
 114          {
 115   1              uint8 i, tmp;
 116   1              
 117   1              clear_ds1302_WP();
C51 COMPILER V7.08   MAIN                                                                  11/23/2014 22:48:46 PAGE 3   

 118   1              
 119   1              reset_ds1302();
 120   1              RST = 1;
 121   1              write_ds1302_byte(DS1302_W_ADDR);
 122   1              for (i=0; i<7; i++)
 123   1              {
 124   2                      tmp = HEX2BCD(((uint8 *)timedata)[i]);
 125   2                      write_ds1302_byte(tmp);
 126   2              }
 127   1              write_ds1302_byte(0);
 128   1              SDA = 0;
 129   1              RST = 0;
 130   1      
 131   1              set_ds1302_WP();
 132   1      }
 133          
 134          /**
 135           * 读时钟数据（BCD格式）
 136          */
 137          void read_time(uint8 *timedata)
 138          {
 139   1              uint8 i;
 140   1      
 141   1              clear_ds1302_WP();
 142   1      
 143   1              reset_ds1302();
 144   1              RST = 1;
 145   1              write_ds1302_byte(DS1302_R_ADDR);
 146   1              P1M0 = 0;
 147   1              P1M1 = 2;
 148   1              for (i=0; i<7; i++)
 149   1              {
 150   2                      timedata[i] = read_ds1302_byte();
 151   2                      timedata[i] = BCD2HEX(timedata[i]);
 152   2              }
 153   1              P1M0 = 0;
 154   1              P1M1 = 0;
 155   1              SDA = 0;
 156   1              RST = 0;
 157   1              
 158   1              set_ds1302_WP();
 159   1      }
 160          
 161          
 162          
 163          /**
 164           * UART初始化
 165           * 波特率：9600
 166          */
 167          void uart_init(void)
 168          {
 169   1          TMOD = 0x21;        // 定时器1工作在方式2（自动重装）
 170   1          SCON = 0x50;        // 10位uart，允许串行接受
 171   1      
 172   1          TH1 = 0xFD;
 173   1          TL1 = 0xFD;
 174   1      
 175   1          TR1 = 1;
 176   1      }
 177          
 178          /**
 179           * UART发送一字节
C51 COMPILER V7.08   MAIN                                                                  11/23/2014 22:48:46 PAGE 4   

 180          */
 181          void UART_Send_Byte(uint8 dat)
 182          {
 183   1              SBUF = dat;
 184   1              while (TI == 0);
 185   1              TI = 0;
 186   1      }
 187          
 188          /**
 189           * 将数据转换成ASC码并通过UART发送出去
 190          */
 191          void UART_Send_Dat(uint8 dat)
 192          {
 193   1              UART_Send_Byte(dat/10 + '0');
 194   1              UART_Send_Byte(dat%10 + '0');
 195   1      }
 196          
 197          main()    
 198          {
 199   1              P1M0 = 0;
 200   1              P1M1 = 0;
 201   1      
 202   1              SET_P4_OUT_IO(RST_BIT);
 203   1              RST = 0;
 204   1      
 205   1              SET_P4_OUT_IO(SDA_BIT);
 206   1              SDA = 1;
 207   1      
 208   1              SET_P4_OUT_IO(SCK_BIT);
 209   1              SCK = 0;
 210   1      
 211   1              uart_init();
 212   1              //set_time(&time);    //设定时间值
 213   1      
 214   1              while(1)
 215   1              {
 216   2      
 217   2                      read_time(&time);   //秒分时日月周年
 218   2              
 219   2                      UART_Send_Dat(time[6]);
 220   2                      UART_Send_Byte('-');
 221   2                      UART_Send_Dat(time[4]);
 222   2                      UART_Send_Byte('-');
 223   2                      UART_Send_Dat(time[3]);
 224   2                      UART_Send_Byte(' ');
 225   2      
 226   2                      UART_Send_Dat(time[2]);
 227   2                      UART_Send_Byte(':');
 228   2                      UART_Send_Dat(time[1]);
 229   2                      UART_Send_Byte(':');
 230   2                      UART_Send_Dat(time[0]);
 231   2                      UART_Send_Byte('\r');
 232   2                      UART_Send_Byte('\n');
 233   2                      
 234   2                      delay(60000);
 235   2                      delay(60000);
 236   2                      delay(60000);
 237   2                      delay(60000);
 238   2                      delay(60000);
 239   2                      delay(60000);
 240   2                      delay(60000);
 241   2                      delay(60000);
C51 COMPILER V7.08   MAIN                                                                  11/23/2014 22:48:46 PAGE 5   

 242   2                      delay(60000);
 243   2              }
 244   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    456    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
